<!--RoboCup 2016 Restaurant-->
<launch>
  <arg name="simulation" default="false"/>
  <group unless="$(arg simulation)"> <!-- Real robot -->
    <include file="$(find turtlebot_follower)/launch/includes/velocity_smoother.launch.xml"/>
    <include file="$(find turtlebot_follower)/launch/includes/safety_controller.launch.xml"/>

    <param name="camera/rgb/image_color/compressed/jpeg_quality" value="22"/>
    
    <include file="$(find turtlebot_bringup)/launch/3dsensor.launch">
      <arg name="rgb_processing"                  value="true"/>  <!-- only required if we use android client -->
      <arg name="depth_processing"                value="true"/>
      <arg name="depth_registered_processing"     value="false"/>
      <arg name="depth_registration"              value="false"/>
      <arg name="disparity_processing"            value="false"/>
      <arg name="disparity_registered_processing" value="false"/>
      <arg name="scan_processing"                 value="false"/>  <!-- turn false to true by Hirono-->
      <!--<arg name="scan_topic" 			 		  value="/scan"/>   Added for mapping by Hirono-->
    </include>

    <!-- Make a slower camera feed available; only required if we use android client -->
    <node pkg="topic_tools" type="throttle" name="camera_throttle"
          args="messages camera/rgb/image_color/compressed 5"/>

  <!--  Load turtlebot follower into the 3d sensors nodelet manager to avoid pointcloud serializing -->
    <node pkg="nodelet" type="nodelet" name="turtlebot_follower"
          args="load turtlebot_follower/TurtlebotFollower camera/camera_nodelet_manager">
      <remap from="turtlebot_follower/cmd_vel" to="follower_velocity_smoother/raw_cmd_vel"/>
      <remap from="depth/points" to="camera/depth/points"/>
      <param name="enabled" value="true" />
      <param name="x_scale" value="2.3" /> <!--The scaling factor for translational robot speed.-->
      <param name="z_scale" value="0.9" /> <!--The scaling factor for rotational robot speed.-->
      <param name="min_x" value="-0.25" />
      <param name="max_x" value="0.25" />
      <param name="min_y" value="0.1" />
      <param name="max_y" value="0.5" />
      <param name="max_z" value="1.5" />
      <param name="goal_z" value="0.6" /> <!--The distance away from the robot to hold the centroid.-->
    </node>
  </group>

  <group if="$(arg simulation)">
    <!-- not supported.. -->
  </group>
	<node name="hokuyo" pkg="hokuyo_node" type="hokuyo_node" respawn="false" output="screen">
    <!-- Starts up faster, but timestamps will be inaccurate. --> 
    <param name="calibrate_time" type="bool" value="false"/> 
    <!-- Set the port to connect to here -->
    <param name="port" type="string" value="/dev/ttyACM0"/> 
  	<param name="frame_id" value="base_footprint"/>
    <param name="intensity" type="bool" value="false"/>
  </node>

	<node pkg="restaurant" type="training_3.py" name="training_phase" output="screen"/>
	<node pkg="restaurant" type="guide_3.py" name="guide_phase" output="screen">
	</node>
  
</launch>
